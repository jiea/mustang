<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 读取数据库配置文件 -->
	<context:property-placeholder location="classpath:property/jdbc.properties" />

	<!-- 配置数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 ，单位是毫秒 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<!-- 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。 -->
		<property name="validationQuery" value="SELECT 1" />

		<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->
		<property name="testWhileIdle" value="true" />

		<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认值： true -->
		<property name="testOnBorrow" value="false" />

		<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。默认值：false -->
		<property name="testOnReturn" value="false" />

		<!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。默认值：false -->
		<property name="poolPreparedStatements" value="false" />

		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<!-- 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall -->
		<property name="filters" value="stat" />
	</bean>
	
	<!-- 配置 SqlSessionFactory 对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置mybatis全局配置文件 mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描entity包，使用别名，配置多个包使用;分割 -->
		<property name="typeAliasesPackage" value="com.jiea.mustang.entity"/>
		<!-- 扫描sql配置文件  -->
		<property name="mapperLocations" value="classpath:com/jiea/mustang/mapper/*Mapper.xml"/>
	</bean>
	
	<!-- 配置扫描dao接口包， 注入到spring容器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- dao接口包 -->
		<property name="basePackage" value="com.jiea.mustang.dao"/>
	</bean>
	
</beans>